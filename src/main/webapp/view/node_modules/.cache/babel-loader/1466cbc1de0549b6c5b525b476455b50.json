{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nexport function getFormattedDate(date) {\n  let year = date.getFullYear();\n  let month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : '0' + month;\n  let day = date.getDate().toString();\n  day = day.length > 1 ? day : '0' + day;\n  return month + '/' + day + '/' + year;\n}\nexport function searchByIdArray(arr, id) {\n  console.log(arr);\n  console.log(id);\n  return arr.filter(el => el.id == id)[0];\n}\nexport function checkStillLogin() {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    const {\n      exp\n    } = jwt_decode(token);\n    const isValid = exp * 1000 - Date.now() > 0;\n    return token && isValid;\n  }\n\n  return false;\n}\nexport function getCookie(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n\n  return \"\";\n}","map":{"version":3,"sources":["D:/Hanu/HANU_Hospital-main/src/main/webapp/view/src/utils/utils.js"],"names":["jwt_decode","getFormattedDate","date","year","getFullYear","month","getMonth","toString","length","day","getDate","searchByIdArray","arr","id","console","log","filter","el","checkStillLogin","token","localStorage","getItem","exp","isValid","Date","now","getCookie","cname","name","decodedCookie","decodeURIComponent","document","cookie","ca","split","i","c","charAt","substring","indexOf"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AACnC,MAAIC,IAAI,GAAGD,IAAI,CAACE,WAAL,EAAX;AAEA,MAAIC,KAAK,GAAG,CAAC,IAAIH,IAAI,CAACI,QAAL,EAAL,EAAsBC,QAAtB,EAAZ;AACAF,EAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,GAAe,CAAf,GAAmBH,KAAnB,GAA2B,MAAMA,KAAzC;AAEA,MAAII,GAAG,GAAGP,IAAI,CAACQ,OAAL,GAAeH,QAAf,EAAV;AACAE,EAAAA,GAAG,GAAGA,GAAG,CAACD,MAAJ,GAAa,CAAb,GAAiBC,GAAjB,GAAuB,MAAMA,GAAnC;AAEA,SAAOJ,KAAK,GAAG,GAAR,GAAcI,GAAd,GAAoB,GAApB,GAA0BN,IAAjC;AACH;AAED,OAAO,SAASQ,eAAT,CAAyBC,GAAzB,EAA8BC,EAA9B,EAAkC;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEA,SAAOD,GAAG,CAACI,MAAJ,CAAYC,EAAD,IAAQA,EAAE,CAACJ,EAAH,IAASA,EAA5B,EAAgC,CAAhC,CAAP;AACH;AAED,OAAO,SAASK,eAAT,GAA2B;AAC9B,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAIF,KAAJ,EAAW;AACP,UAAM;AAAEG,MAAAA;AAAF,QAAUtB,UAAU,CAACmB,KAAD,CAA1B;AACA,UAAMI,OAAO,GAAMD,GAAG,GAAG,IAAP,GAAeE,IAAI,CAACC,GAAL,EAAhB,GAA8B,CAA/C;AACA,WAAQN,KAAK,IAAII,OAAjB;AACH;;AACD,SAAO,KAAP;AACH;AAED,OAAO,SAASG,SAAT,CAAmBC,KAAnB,EAA0B;AAC7B,MAAIC,IAAI,GAAGD,KAAK,GAAG,GAAnB;AACA,MAAIE,aAAa,GAAGC,kBAAkB,CAACC,QAAQ,CAACC,MAAV,CAAtC;AACA,MAAIC,EAAE,GAAGJ,aAAa,CAACK,KAAd,CAAoB,GAApB,CAAT;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,EAAE,CAACzB,MAAvB,EAA+B2B,CAAC,EAAhC,EAAoC;AAChC,QAAIC,CAAC,GAAGH,EAAE,CAACE,CAAD,CAAV;;AACA,WAAOC,CAAC,CAACC,MAAF,CAAS,CAAT,KAAe,GAAtB,EAA2B;AACvBD,MAAAA,CAAC,GAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,CAAJ;AACH;;AACD,QAAIF,CAAC,CAACG,OAAF,CAAUX,IAAV,KAAmB,CAAvB,EAA0B;AACtB,aAAOQ,CAAC,CAACE,SAAF,CAAYV,IAAI,CAACpB,MAAjB,EAAyB4B,CAAC,CAAC5B,MAA3B,CAAP;AACH;AACJ;;AACD,SAAO,EAAP;AACH","sourcesContent":["import jwt_decode from \"jwt-decode\";\nexport function getFormattedDate(date) {\n    let year = date.getFullYear();\n\n    let month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : '0' + month;\n\n    let day = date.getDate().toString();\n    day = day.length > 1 ? day : '0' + day;\n\n    return month + '/' + day + '/' + year;\n}\n\nexport function searchByIdArray(arr, id) {\n    console.log(arr)\n    console.log(id)\n\n    return arr.filter((el) => el.id == id)[0]\n}\n\nexport function checkStillLogin() {\n    const token = localStorage.getItem('token');\n    if (token) {\n        const { exp } = jwt_decode(token);\n        const isValid = (((exp * 1000) - Date.now()) > 0);\n        return (token && isValid)\n    }\n    return false;\n}\n\nexport function getCookie(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}"]},"metadata":{},"sourceType":"module"}
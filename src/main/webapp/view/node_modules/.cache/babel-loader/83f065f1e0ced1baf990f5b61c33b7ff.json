{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hanu\\\\HANU_Hospital-main\\\\src\\\\main\\\\webapp\\\\view\\\\src\\\\pages\\\\department\\\\EditDepartmentDialog.js\";\nimport React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getDoctors, getReps, getOneDepartment } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditDepartmentDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      staffID: null,\n      doctors: null,\n      reps: null\n    };\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  async componentDidMount() {\n    const {\n      isRemove,\n      selectedDepartment\n    } = this.props;\n    const department = await getOneDepartment(selectedDepartment);\n\n    if (!isRemove) {\n      let doctors = await getDoctors();\n      let reps = await getReps();\n      this.setState({\n        staffID: doctors.length > 0 && doctors[0].id || reps.length > 0 && reps[0].id || null,\n        doctors: doctors,\n        reps: reps\n      });\n    } else {\n      this.setState({\n        reps: department.staff,\n        staffID: department.staff.length > 0 && department.staff[0].id\n      });\n    }\n  }\n\n  handleChangeInput(el) {\n    const {\n      value\n    } = el.target;\n    console.log({\n      value\n    });\n    this.setState({\n      staffID: value\n    });\n  }\n\n  handleEdit() {\n    const {\n      addStafftoDep,\n      selectedDepartment,\n      isRemove,\n      removeStaff\n    } = this.props;\n    const {\n      staffID\n    } = this.state;\n\n    if (isRemove === false) {\n      addStafftoDep(selectedDepartment, staffID);\n    } else {\n      removeStaff(staffID);\n    }\n  }\n\n  render() {\n    const {\n      doctors,\n      reps,\n      staffID\n    } = this.state;\n    const {\n      open,\n      handleToggleEditDialog,\n      isRemove\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: [isRemove === true ? \"Remove\" : \"Add\", \" Staff To Department\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Staff Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cars\",\n            onChange: this.handleChangeInput,\n            children: [doctors && doctors.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d.id,\n              children: `Dr. ${d.name}`\n            }, d.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 58\n            }, this)), reps && reps.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: r.id,\n              children: `${r.name}`\n            }, r.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 52\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          className: \"full-size\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn\",\n            id: \"save-btn\",\n            onClick: staffID && this.handleEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn\",\n            id: \"close-btn\",\n            onClick: handleToggleEditDialog,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditDepartmentDialog;","map":{"version":3,"sources":["D:/Hanu/HANU_Hospital-main/src/main/webapp/view/src/pages/department/EditDepartmentDialog.js"],"names":["React","Component","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","getDoctors","getReps","getOneDepartment","EditDepartmentDialog","constructor","props","state","staffID","doctors","reps","handleChangeInput","bind","handleEdit","componentDidMount","isRemove","selectedDepartment","department","setState","length","id","staff","el","value","target","console","log","addStafftoDep","removeStaff","render","open","handleToggleEditDialog","map","d","name","r"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getDoctors, getReps, getOneDepartment } from '../../utils/api'\nclass EditDepartmentDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            staffID: null,\n            doctors: null,\n            reps: null\n        };\n        this.handleChangeInput = this.handleChangeInput.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n    }\n\n    async componentDidMount() {\n        const { isRemove, selectedDepartment } = this.props;\n        const department = await getOneDepartment(selectedDepartment)\n        if (!isRemove) {\n            let doctors = await getDoctors();\n            let reps = await getReps();\n            this.setState({\n                staffID: (doctors.length > 0 && doctors[0].id) || (reps.length > 0 && reps[0].id) || null,\n                doctors: doctors,\n                reps: reps,\n            })\n        } else {\n            this.setState({\n                reps: department.staff,\n                staffID: department.staff.length > 0 && department.staff[0].id\n            })\n        }\n    }\n\n    handleChangeInput(el) {\n        const { value } = el.target\n        console.log({ value })\n        this.setState({\n            staffID: value\n        })\n    }\n\n    handleEdit() {\n        const { addStafftoDep, selectedDepartment, isRemove, removeStaff } = this.props;\n        const { staffID } = this.state;\n        if (isRemove === false) {\n            addStafftoDep(selectedDepartment, staffID);\n        } else {\n            removeStaff(staffID);\n        }\n    }\n\n    render() {\n        const { doctors, reps, staffID } = this.state;\n        const { open, handleToggleEditDialog, isRemove } = this.props;\n        return (\n            <Dialog open={open} >\n                <DialogTitle id=\"form-dialog-title\">{isRemove === true ? \"Remove\" : \"Add\"} Staff To Department</DialogTitle>\n                <DialogContent>\n                    <div>\n                        <DialogContentText>\n                            Staff Name\n                        </DialogContentText>\n                        <select id=\"cars\" onChange={this.handleChangeInput}>\n                            {doctors && doctors.map(d => <option value={d.id} key={d.id}>{`Dr. ${d.name}`}</option>)}\n                            {reps && reps.map(r => <option value={r.id} key={r.id}>{`${r.name}`}</option>)}\n                        </select>\n                    </div>\n                    <DialogActions className=\"full-size\">\n                        <button className=\"action-btn\" id=\"save-btn\" onClick={staffID && this.handleEdit}>Save</button>\n                        <button className=\"action-btn\" id=\"close-btn\" onClick={handleToggleEditDialog} >Close</button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n        )\n    }\n\n}\n\nexport default EditDepartmentDialog;"]},"metadata":{},"sourceType":"module"}
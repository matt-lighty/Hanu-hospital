{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hanu\\\\HANU_Hospital-main\\\\src\\\\main\\\\webapp\\\\view\\\\src\\\\pages\\\\department\\\\Department.js\";\nimport React, { Component } from 'react';\nimport BreadCrumbs from '../../components/breadcrumbs/BreadCrumbs';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport AddDepartmentDialog from './AddDepartmentDialog';\nimport EditDepartmentDialog from './EditDepartmentDialog';\nimport { getDepartments, addDepartment, deleteDeparment, getOneDepartment, addStafftoDep, removeStaff } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = {\n  active: [{\n    title: \"Dashboard\",\n    link: \"dashboard\"\n  }],\n  current: \"Department\"\n};\n\nclass Department extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        page: 0,\n        rowsPerPage: parseInt(event.target.value, 10)\n      });\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const {\n        orderBy,\n        orderDirection\n      } = this.state;\n      const isAscending = orderBy === property && orderDirection === 'asc';\n      this.setState({\n        orderBy: property,\n        orderDirection: isAscending ? 'desc' : 'asc'\n      });\n    };\n\n    this.createSortHandler = property => event => {\n      this.handleRequestSort(event, property);\n    };\n\n    this.sortDepartment = (patient, comparator) => {\n      const stabilizedRowArray = patient.map((el, index) => [el, index]);\n      stabilizedRowArray.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n      });\n      return stabilizedRowArray.map(el => el[0]);\n    };\n\n    this.state = {\n      departments: null,\n      headCells: [{\n        id: 'name',\n        label: 'Department Name',\n        sortable: true\n      }, {\n        id: 'doctors',\n        label: 'Staff'\n      }, {\n        id: 'action',\n        label: 'Actions'\n      }],\n      page: 0,\n      rowsPerPage: 5,\n      orderBy: 'name',\n      orderDirection: 'asc',\n      isOpenDialogAdd: false,\n      isOpenDialogEdit: false,\n      selectedID: null,\n      isRemove: null\n    };\n    this.getAllDeps = this.getAllDeps.bind(this);\n    this.addDepartment = this.addDepartment.bind(this);\n    this.addStafftoDep = this.addStafftoDep.bind(this);\n    this.removeStaff = this.removeStaff.bind(this);\n    this.handleToggleDialogAdd = this.handleToggleDialogAdd.bind(this);\n    this.handleToggleDialogEdit = this.handleToggleDialogEdit.bind(this);\n    this.deleteDepartment = this.deleteDepartment.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAllDeps();\n  }\n\n  async getAllDeps() {\n    const departments = await getDepartments();\n    this.setState({\n      departments: departments\n    });\n  }\n\n  async addDepartment(name) {\n    await addDepartment(name);\n    this.handleToggleDialogAdd();\n    this.getAllDeps();\n  }\n\n  async deleteDepartment(id) {\n    const thisDep = await getOneDepartment(id);\n\n    if (thisDep && thisDep.staff.length === 0) {\n      await deleteDeparment(id);\n      this.getAllDeps();\n    } else {\n      alert('Department must be empty first');\n    }\n  }\n\n  async addStafftoDep(id, staffID) {\n    await addStafftoDep(id, staffID);\n    this.handleToggleDialogEdit();\n    this.getAllDeps();\n  }\n\n  async removeStaff(id) {\n    await removeStaff(id);\n    this.handleToggleDialogEdit();\n    this.getAllDeps();\n  }\n\n  handleToggleDialogAdd() {\n    this.setState(currentState => ({\n      isOpenDialogAdd: !currentState.isOpenDialogAdd\n    }));\n  }\n\n  handleToggleDialogEdit(id, isRemove) {\n    this.setState(currentState => ({\n      isOpenDialogEdit: !currentState.isOpenDialogEdit,\n      selectedID: id,\n      isRemove: isRemove\n    }));\n  }\n\n  descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  getComparator(order, orderBy) {\n    return order === 'desc' ? (a, b) => this.descendingComparator(a, b, orderBy) : (a, b) => -this.descendingComparator(a, b, orderBy);\n  }\n\n  render() {\n    const {\n      isOpenDialogAdd,\n      isOpenDialogEdit,\n      departments,\n      selectedID,\n      orderBy,\n      orderDirection,\n      headCells,\n      page,\n      rowsPerPage,\n      isRemove\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"department full\",\n      children: [/*#__PURE__*/_jsxDEV(BreadCrumbs, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), isOpenDialogAdd && /*#__PURE__*/_jsxDEV(AddDepartmentDialog, {\n        open: isOpenDialogAdd,\n        handleToggleDialogAdd: this.handleToggleDialogAdd,\n        addDepartment: this.addDepartment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 36\n      }, this), isOpenDialogEdit && /*#__PURE__*/_jsxDEV(EditDepartmentDialog, {\n        open: isOpenDialogEdit,\n        handleToggleEditDialog: this.handleToggleDialogEdit,\n        addStafftoDep: this.addStafftoDep,\n        isRemove: isRemove,\n        selectedDepartment: selectedID,\n        removeStaff: this.removeStaff\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-area\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"report\",\n          onClick: this.handleToggleDialogAdd,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 81\n          }, this), \" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 98\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"department-section\",\n        className: \"main-section\",\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-area\",\n            children: [/*#__PURE__*/_jsxDEV(InputBase, {\n              className: \"seach-bar\",\n              placeholder: \"Search Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              className: \"search-button\",\n              \"aria-label\": \"search\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: headCells.map(headCell => {\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: headCell.sortable ? /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                      active: orderBy === headCell.id,\n                      direction: orderBy === headCell.id ? orderDirection : 'asc',\n                      onClick: this.createSortHandler(headCell.id),\n                      children: headCell.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 47\n                    }, this) : headCell.label\n                  }, headCell.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 44\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: departments && departments.length > 0 && this.sortDepartment(departments, this.getComparator(orderDirection, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(d => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: d.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"(\", d.staff.length, \") \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 37\n                  }, this), d.staff.map(doctor => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\" \", doctor.name, \", \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(PersonAddIcon, {\n                      fontSize: \"small\",\n                      className: \"edit-button\",\n                      onClick: () => {\n                        this.handleToggleDialogEdit(d.id, false);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(PersonAddDisabledIcon, {\n                      fontSize: \"small\",\n                      className: \"remove-button\",\n                      onClick: () => {\n                        this.handleToggleDialogEdit(d.id, true);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"secondary\",\n                    size: \"small\",\n                    onClick: () => {\n                      window.confirm('Do you want to delete ?') && this.deleteDepartment(d.id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"small\",\n                      color: \"secondary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 33\n                }, this)]\n              }, d.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 220\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Department;","map":{"version":3,"sources":["D:/Hanu/HANU_Hospital-main/src/main/webapp/view/src/pages/department/Department.js"],"names":["React","Component","BreadCrumbs","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","InputBase","Button","IconButton","SearchIcon","AddIcon","PersonAddIcon","PersonAddDisabledIcon","DeleteIcon","TableSortLabel","AddDepartmentDialog","EditDepartmentDialog","getDepartments","addDepartment","deleteDeparment","getOneDepartment","addStafftoDep","removeStaff","data","active","title","link","current","Department","constructor","props","handleChangePage","event","newPage","setState","page","handleChangeRowsPerPage","rowsPerPage","parseInt","target","value","handleRequestSort","property","orderBy","orderDirection","state","isAscending","createSortHandler","sortDepartment","patient","comparator","stabilizedRowArray","map","el","index","sort","a","b","order","departments","headCells","id","label","sortable","isOpenDialogAdd","isOpenDialogEdit","selectedID","isRemove","getAllDeps","bind","handleToggleDialogAdd","handleToggleDialogEdit","deleteDepartment","componentDidMount","name","thisDep","staff","length","alert","staffID","currentState","descendingComparator","getComparator","render","headCell","slice","d","doctor","window","confirm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport BreadCrumbs from '../../components/breadcrumbs/BreadCrumbs';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport AddDepartmentDialog from './AddDepartmentDialog';\nimport EditDepartmentDialog from './EditDepartmentDialog';\n\nimport {\n    getDepartments, addDepartment, deleteDeparment, getOneDepartment,\n    addStafftoDep, removeStaff\n} from '../../utils/api';\n\nconst data = {\n    active:\n        [\n            { title: \"Dashboard\", link: \"dashboard\" }\n        ],\n    current: \"Department\"\n}\n\nclass Department extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            departments: null,\n            headCells: [\n                { id: 'name', label: 'Department Name', sortable: true },\n                { id: 'doctors', label: 'Staff' },\n                { id: 'action', label: 'Actions' },\n            ],\n            page: 0,\n            rowsPerPage: 5,\n            orderBy: 'name',\n            orderDirection: 'asc',\n            isOpenDialogAdd: false,\n            isOpenDialogEdit: false,\n            selectedID: null,\n            isRemove: null\n        }\n        this.getAllDeps = this.getAllDeps.bind(this);\n        this.addDepartment = this.addDepartment.bind(this);\n        this.addStafftoDep = this.addStafftoDep.bind(this);\n        this.removeStaff = this.removeStaff.bind(this);\n        this.handleToggleDialogAdd = this.handleToggleDialogAdd.bind(this);\n        this.handleToggleDialogEdit = this.handleToggleDialogEdit.bind(this);\n        this.deleteDepartment = this.deleteDepartment.bind(this);\n    }\n\n    componentDidMount() {\n        this.getAllDeps();\n    }\n\n    async getAllDeps() {\n        const departments = await getDepartments();\n        this.setState({\n            departments: departments\n        })\n    }\n\n    async addDepartment(name) {\n        await addDepartment(name);\n        this.handleToggleDialogAdd();\n        this.getAllDeps();\n    }\n\n    async deleteDepartment(id) {\n        const thisDep = await getOneDepartment(id);\n        if (thisDep && thisDep.staff.length === 0) {\n            await deleteDeparment(id);\n            this.getAllDeps();\n        } else {\n            alert('Department must be empty first')\n        }\n    }\n\n    async addStafftoDep(id, staffID) {\n        await addStafftoDep(id, staffID)\n        this.handleToggleDialogEdit();\n        this.getAllDeps();\n    }\n\n    async removeStaff(id) {\n        await removeStaff(id)\n        this.handleToggleDialogEdit();\n        this.getAllDeps();\n    }\n\n    handleToggleDialogAdd() {\n        this.setState((currentState) => ({\n            isOpenDialogAdd: !currentState.isOpenDialogAdd\n        }));\n    }\n\n    handleToggleDialogEdit(id, isRemove) {\n        this.setState((currentState) => ({\n            isOpenDialogEdit: !currentState.isOpenDialogEdit,\n            selectedID: id,\n            isRemove: isRemove\n        }));\n    }\n\n    handleChangePage = (event, newPage) => {\n        this.setState({\n            page: newPage\n        });\n    };\n\n    handleChangeRowsPerPage = (event) => {\n        this.setState({\n            page: 0,\n            rowsPerPage: parseInt(event.target.value, 10)\n        })\n    };\n\n    handleRequestSort = (event, property) => {\n        const { orderBy, orderDirection } = this.state;\n        const isAscending = (orderBy === property && orderDirection === 'asc');\n        this.setState({\n            orderBy: property,\n            orderDirection: (isAscending) ? 'desc' : 'asc'\n        })\n    };\n\n    createSortHandler = (property) => (event) => {\n        this.handleRequestSort(event, property)\n    };\n\n    descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => this.descendingComparator(a, b, orderBy)\n            : (a, b) => -this.descendingComparator(a, b, orderBy)\n    }\n\n    sortDepartment = (patient, comparator) => {\n        const stabilizedRowArray = patient.map((el, index) => [el, index])\n        stabilizedRowArray.sort((a, b) => {\n            const order = comparator(a[0], b[0])\n            if (order !== 0) return order\n            return a[1] - b[1]\n        })\n        return stabilizedRowArray.map((el) => el[0])\n    }\n\n\n    render() {\n        const { isOpenDialogAdd, isOpenDialogEdit, departments, selectedID,\n            orderBy, orderDirection, headCells, page, rowsPerPage, isRemove } = this.state;\n        return <div className=\"department full\">\n            <BreadCrumbs data={data} />\n            {\n                isOpenDialogAdd && <AddDepartmentDialog\n                    open={isOpenDialogAdd}\n                    handleToggleDialogAdd={this.handleToggleDialogAdd}\n                    addDepartment={this.addDepartment}\n                />\n            }\n            {isOpenDialogEdit && <EditDepartmentDialog\n                open={isOpenDialogEdit}\n                handleToggleEditDialog={this.handleToggleDialogEdit}\n                addStafftoDep={this.addStafftoDep}\n                isRemove={isRemove}\n                selectedDepartment={selectedID}\n                removeStaff={this.removeStaff}\n            />}\n            <div className=\"add-area\">\n                <button className=\"report\" onClick={this.handleToggleDialogAdd}><span>Add</span> <AddIcon /></button>\n            </div>\n            <section id=\"department-section\" className=\"main-section\">\n                <TableContainer component={Paper}>\n                    <div className=\"search-area\">\n                        <InputBase\n                            className=\"seach-bar\"\n                            placeholder=\"Search Department\"\n                        />\n                        <IconButton type=\"submit\" className=\"search-button\" aria-label=\"search\">\n                            <SearchIcon />\n                        </IconButton>\n                    </div>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                {headCells.map((headCell) => {\n                                    return <TableCell key={headCell.id}>\n                                        {(headCell.sortable)\n                                            ? <TableSortLabel\n                                                active={orderBy === headCell.id}\n                                                direction={orderBy === headCell.id ? orderDirection : 'asc'}\n                                                onClick={this.createSortHandler(headCell.id)}\n                                            >\n                                                {headCell.label}\n                                            </TableSortLabel>\n                                            : headCell.label\n                                        }\n                                    </TableCell>\n                                })}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {departments && departments.length > 0 && this.sortDepartment(departments, this.getComparator(orderDirection, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((d) => <TableRow key={d.id}>\n                                <TableCell align=\"left\">{d.name}</TableCell>\n                                <TableCell align=\"left\">\n                                    <span>({d.staff.length}) </span>\n                                    {d.staff.map(doctor => {\n                                        return <>\n                                            <span> {doctor.name}, </span>\n                                        </>\n                                    })}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    <Button color=\"primary\" size=\"small\" >\n                                        <PersonAddIcon fontSize=\"small\" className=\"edit-button\" onClick={() => { this.handleToggleDialogEdit(d.id, false) }}></PersonAddIcon>\n                                    </Button>\n                                    <Button color=\"primary\" size=\"small\" >\n                                        <PersonAddDisabledIcon fontSize=\"small\" className=\"remove-button\" onClick={() => { this.handleToggleDialogEdit(d.id, true) }}></PersonAddDisabledIcon>\n                                    </Button>\n                                    <Button color=\"secondary\" size=\"small\" onClick={() => { window.confirm('Do you want to delete ?') && this.deleteDepartment(d.id) }}>\n                                        <DeleteIcon fontSize=\"small\" color=\"secondary\"></DeleteIcon>\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </section>\n        </div>\n    }\n}\n\nexport default Department"]},"metadata":{},"sourceType":"module"}
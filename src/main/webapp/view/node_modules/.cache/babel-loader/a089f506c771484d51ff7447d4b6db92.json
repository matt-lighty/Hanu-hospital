{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hanu\\\\HANU_Hospital-main\\\\src\\\\main\\\\webapp\\\\view\\\\src\\\\components\\\\timeline\\\\EditRecordDialog.js\";\nimport React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { getRecord, getAllServices, addPres } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {\n        doctorId: null,\n        diagnosis: '',\n        description: ''\n      },\n      record: null,\n      services: null,\n      serviceId: null\n    };\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n    this.handeAdd = this.handeAdd.bind(this);\n  }\n\n  async componentDidMount() {\n    this.getRecordById();\n    this.getServices();\n  }\n\n  async getRecordById() {\n    const record = await getRecord(this.props.recordId);\n    this.setState(currentState => ({\n      form: { ...currentState.form,\n        doctorId: this.props.doctorId,\n        diagnosis: record.diagnosis,\n        description: record.description,\n        id: record.id\n      },\n      record: record\n    }));\n  }\n\n  async getServices() {\n    const services = await getAllServices();\n    this.setState(currentState => ({\n      services: services,\n      serviceId: services.length > 0 && services[0].id\n    }));\n  }\n\n  handleChangeInput(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState(currentState => ({\n      form: { ...currentState.form,\n        [name]: value\n      }\n    }));\n  }\n\n  handeAdd() {\n    const {\n      editRecord,\n      addProcedure\n    } = this.props;\n    const {\n      record,\n      serviceId\n    } = this.state;\n    addProcedure(record.id, serviceId);\n    editRecord(this.state.form);\n  }\n\n  handleChangePres(e) {\n    const {\n      value\n    } = e.target;\n    this.setState({\n      serviceId: value\n    });\n  }\n\n  render() {\n    const {\n      open,\n      handleToggleDialogAdd\n    } = this.props;\n    const {\n      services\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Edit Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Service Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"doctor\",\n            name: \"doctorId\",\n            onChange: this.handleChangeInput,\n            children: services && services.map(d => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d.id,\n                children: `${d.name}`\n              }, d.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"description\",\n            type: \"text\",\n            onChange: this.handleChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Diagnosis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"diagnosis\",\n            type: \"text\",\n            onChange: this.handleChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \"action-btn\",\n              id: \"save-btn\",\n              onClick: this.handeAdd,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              className: \"action-btn\",\n              id: \"close-btn\",\n              onClick: handleToggleDialogAdd,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditDialog;","map":{"version":3,"sources":["D:/Hanu/HANU_Hospital-main/src/main/webapp/view/src/components/timeline/EditRecordDialog.js"],"names":["React","Component","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","getRecord","getAllServices","addPres","EditDialog","constructor","props","state","form","doctorId","diagnosis","description","record","services","serviceId","handleChangeInput","bind","handeAdd","componentDidMount","getRecordById","getServices","recordId","setState","currentState","id","length","e","name","value","target","editRecord","addProcedure","handleChangePres","render","open","handleToggleDialogAdd","map","d","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { getRecord, getAllServices, addPres } from '../../utils/api'\n\nclass EditDialog extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            form: {\n                doctorId: null,\n                diagnosis: '',\n                description: '',\n            },\n            record: null,\n            services: null,\n            serviceId: null\n        };\n        this.handleChangeInput = this.handleChangeInput.bind(this);\n        this.handeAdd = this.handeAdd.bind(this);\n    }\n\n    async componentDidMount() {\n        this.getRecordById()\n        this.getServices()\n    }\n\n    async getRecordById() {\n        const record = await getRecord(this.props.recordId)\n        this.setState((currentState) => ({\n            form: {\n                ...currentState.form,\n                doctorId: this.props.doctorId,\n                diagnosis: record.diagnosis,\n                description: record.description,\n                id: record.id,\n            },\n            record: record\n        }))\n    }\n\n    async getServices() {\n        const services = await getAllServices();\n        this.setState((currentState) => ({\n            services: services,\n            serviceId: services.length > 0 && services[0].id\n        }))\n    }\n\n    handleChangeInput(e) {\n        const { name, value } = e.target;\n        this.setState((currentState) => ({\n            form: {\n                ...currentState.form,\n                [name]: value\n            }\n        }))\n    }\n\n    handeAdd() {\n        const { editRecord, addProcedure } = this.props;\n        const { record, serviceId } = this.state;\n        addProcedure(record.id, serviceId)\n        editRecord(this.state.form)\n    }\n\n    handleChangePres(e) {\n        const { value } = e.target;\n        this.setState({\n            serviceId: value\n        })\n    }\n\n    render() {\n        const { open, handleToggleDialogAdd } = this.props;\n        const { services } = this.state;\n        return (\n            <Dialog open={open} >\n                <DialogTitle id=\"form-dialog-title\">Edit Record</DialogTitle>\n                <DialogContent>\n                    <div>\n                        <DialogContentText>\n                            Service Name\n                        </DialogContentText>\n                        <select id=\"doctor\" name=\"doctorId\" onChange={this.handleChangeInput}>\n                            {services && services.map(d => {\n                                return <option value={d.id} key={d.id}>{`${d.name}`}</option>\n                            })}\n                        </select>\n                    </div>\n                    <div>\n                        <DialogContentText>\n                            Description\n                        </DialogContentText>\n                        <input name=\"description\" type=\"text\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div>\n                        <DialogContentText>\n                            Diagnosis\n                        </DialogContentText>\n                        <input name=\"diagnosis\" type=\"text\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div style={{ width: \"100%\" }}>\n                        <DialogActions>\n                            <Button variant=\"contained\" className=\"action-btn\" id=\"save-btn\" onClick={this.handeAdd}>\n                                Save\n                        </Button>\n                            <Button variant=\"contained\" color=\"secondary\" className=\"action-btn\" id=\"close-btn\" onClick={handleToggleDialogAdd}>\n                                Close\n                        </Button>\n                        </DialogActions>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nexport default EditDialog;"]},"metadata":{},"sourceType":"module"}
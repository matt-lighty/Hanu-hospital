{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hanu\\\\HANU_Hospital-main\\\\src\\\\main\\\\webapp\\\\view\\\\src\\\\pages\\\\employee\\\\Employee.js\";\nimport React, { Component } from 'react';\nimport BreadCrumbs from '../../components/breadcrumbs/BreadCrumbs';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { getDoctors, getReps, addDoctor, addRep, deleteRep, deleteDoc, getOneRep, getOneDoctor, editDoctor, editNurse } from '../../utils/api';\nimport AddEmployeeDialog from './AddEmployeeDialog';\nimport EditEmployeeDialog from './EditEmployeeDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  active: [{\n    title: \"Dashboard\",\n    link: \"dashboard\"\n  }],\n  current: \"Employee\"\n};\n\nclass Employee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllDoctors = async () => {\n      const doctors = await getDoctors();\n      this.setState({\n        doctors: doctors\n      });\n    };\n\n    this.getAllReps = async () => {\n      const reps = await getReps();\n      this.setState({\n        reps: reps\n      });\n    };\n\n    this.deleteRep = async id => {\n      await deleteRep(id);\n      this.getAllDoctors();\n      this.getAllReps();\n    };\n\n    this.deleteDoc = async id => {\n      await deleteDoc(id);\n      this.getAllDoctors();\n      this.getAllReps();\n    };\n\n    this.getSelectedEmployee = async (type, id) => {\n      const {\n        doctors,\n        reps\n      } = this.state;\n      let selectedEmployee = null;\n\n      if (type === \"doctor\") {\n        const result = doctors.filter(d => d.id === id);\n        selectedEmployee = result[0];\n      } else {\n        const result = reps.filter(r => r.id === id);\n        selectedEmployee = result[0];\n      }\n\n      this.setState({\n        selectedEmployee: selectedEmployee\n      });\n    };\n\n    this.state = {\n      doctors: null,\n      reps: null,\n      isOpenDialogAdd: false,\n      isOpenDialogEdit: false,\n      selectedEmployee: null\n    };\n    this.handleToggleDialogAdd = this.handleToggleDialogAdd.bind(this);\n    this.handleToggleDialogEdit = this.handleToggleDialogEdit.bind(this);\n    this.addNewEmployee = this.addNewEmployee.bind(this);\n    this.editEmployee = this.editEmployee.bind(this);\n  }\n\n  async addNewEmployee(data) {\n    const {\n      job,\n      ...restOfDoctor\n    } = data;\n\n    if (job === 'doctor') {\n      await addDoctor({ ...restOfDoctor\n      });\n    } else if (job === 'receptionist') {\n      const {\n        speciality,\n        ...restOfRec\n      } = { ...restOfDoctor\n      };\n      await addRep({ ...restOfRec\n      });\n    }\n\n    this.handleToggleDialogAdd();\n    this.getAllDoctors();\n    this.getAllReps();\n  }\n\n  async editEmployee(data) {\n    console.log({\n      data\n    });\n\n    if (data.speciality) {\n      await editDoctor(data.id, data);\n    } else {\n      await editNurse(data.id, data);\n    }\n\n    this.handleToggleDialogEdit();\n    this.getAllDoctors();\n    this.getAllReps();\n  }\n\n  componentDidMount() {\n    this.getAllDoctors();\n    this.getAllReps();\n  }\n\n  handleToggleDialogAdd() {\n    this.setState(currentState => ({\n      isOpenDialogAdd: !currentState.isOpenDialogAdd\n    }));\n  }\n\n  handleToggleDialogEdit() {\n    this.setState(currentState => ({\n      isOpenDialogEdit: !currentState.isOpenDialogEdit\n    }));\n  }\n\n  render() {\n    const {\n      doctors,\n      reps,\n      isOpenDialogAdd,\n      isOpenDialogEdit,\n      selectedEmployee\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee full\",\n      children: [/*#__PURE__*/_jsxDEV(BreadCrumbs, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), isOpenDialogAdd && /*#__PURE__*/_jsxDEV(AddEmployeeDialog, {\n        open: isOpenDialogAdd,\n        handleToggleDialogAdd: this.handleToggleDialogAdd,\n        addNewEmployee: this.addNewEmployee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 36\n      }, this), isOpenDialogEdit && /*#__PURE__*/_jsxDEV(EditEmployeeDialog, {\n        open: isOpenDialogEdit,\n        handleToggleDialogEdit: this.handleToggleDialogEdit,\n        editEmployee: this.editEmployee,\n        employee: selectedEmployee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-area\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"report\",\n          onClick: this.handleToggleDialogAdd,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 81\n          }, this), \" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 98\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"employee-section\",\n        className: \"main-section\",\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-area\",\n            children: [/*#__PURE__*/_jsxDEV(InputBase, {\n              className: \"seach-bar\",\n              placeholder: \"Search Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              className: \"search-button\",\n              \"aria-label\": \"search\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"Employee Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"Job\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"D.O.B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"Phone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"Salary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"Speciality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [doctors && doctors.map(d => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: d.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Doctor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: d.dob\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: d.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: d.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: d.salary\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: d.speciality\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"edit\",\n                      onClick: () => {\n                        this.handleToggleDialogEdit();\n                        this.getSelectedEmployee('doctor', d.id);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                        fontSize: \"small\",\n                        className: \"edit-button\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 37\n                  }, this)]\n                }, d.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 40\n                }, this);\n              }), reps && reps.map(r => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: r.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Nurse\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: r.dob\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: r.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: r.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: r.salary\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"edit\",\n                      onClick: () => {\n                        this.handleToggleDialogEdit();\n                        this.getSelectedEmployee('nurse', r.id);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                        fontSize: \"small\",\n                        className: \"edit-button\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 37\n                  }, this)]\n                }, r.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 40\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Employee;","map":{"version":3,"sources":["D:/Hanu/HANU_Hospital-main/src/main/webapp/view/src/pages/employee/Employee.js"],"names":["React","Component","BreadCrumbs","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","InputBase","IconButton","SearchIcon","AddIcon","EditIcon","DeleteIcon","getDoctors","getReps","addDoctor","addRep","deleteRep","deleteDoc","getOneRep","getOneDoctor","editDoctor","editNurse","AddEmployeeDialog","EditEmployeeDialog","data","active","title","link","current","Employee","constructor","props","getAllDoctors","doctors","setState","getAllReps","reps","id","getSelectedEmployee","type","state","selectedEmployee","result","filter","d","r","isOpenDialogAdd","isOpenDialogEdit","handleToggleDialogAdd","bind","handleToggleDialogEdit","addNewEmployee","editEmployee","job","restOfDoctor","speciality","restOfRec","console","log","componentDidMount","currentState","render","map","name","dob","phone","email","salary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport BreadCrumbs from '../../components/breadcrumbs/BreadCrumbs';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n    getDoctors, getReps, addDoctor, addRep,\n    deleteRep, deleteDoc, getOneRep, getOneDoctor,\n    editDoctor, editNurse\n} from '../../utils/api';\nimport AddEmployeeDialog from './AddEmployeeDialog'\nimport EditEmployeeDialog from './EditEmployeeDialog'\nconst data = {\n    active:\n        [\n            { title: \"Dashboard\", link: \"dashboard\" }\n        ],\n    current: \"Employee\"\n}\n\n\nclass Employee extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            doctors: null,\n            reps: null,\n            isOpenDialogAdd: false,\n            isOpenDialogEdit: false,\n            selectedEmployee: null,\n        }\n        this.handleToggleDialogAdd = this.handleToggleDialogAdd.bind(this);\n        this.handleToggleDialogEdit = this.handleToggleDialogEdit.bind(this);\n        this.addNewEmployee = this.addNewEmployee.bind(this);\n        this.editEmployee = this.editEmployee.bind(this);\n    }\n\n    async addNewEmployee(data) {\n        const { job, ...restOfDoctor } = data;\n        if (job === 'doctor') {\n            await addDoctor({ ...restOfDoctor })\n        } else if (job === 'receptionist') {\n            const { speciality, ...restOfRec } = { ...restOfDoctor }\n            await addRep({ ...restOfRec })\n        }\n        this.handleToggleDialogAdd();\n        this.getAllDoctors();\n        this.getAllReps();\n    }\n\n    async editEmployee(data) {\n        console.log({ data })\n        if (data.speciality) {\n            await editDoctor(data.id, data)\n        } else {\n            await editNurse(data.id, data)\n        }\n        this.handleToggleDialogEdit();\n        this.getAllDoctors();\n        this.getAllReps();\n    }\n\n\n    componentDidMount() {\n        this.getAllDoctors();\n        this.getAllReps();\n    }\n\n    handleToggleDialogAdd() {\n        this.setState((currentState) => ({\n            isOpenDialogAdd: !currentState.isOpenDialogAdd\n        }));\n    }\n\n    handleToggleDialogEdit() {\n        this.setState((currentState) => ({\n            isOpenDialogEdit: !currentState.isOpenDialogEdit\n        }));\n    }\n\n    getAllDoctors = async () => {\n        const doctors = await getDoctors();\n        this.setState({\n            doctors: doctors\n        })\n    }\n\n    getAllReps = async () => {\n        const reps = await getReps();\n        this.setState({\n            reps: reps\n        })\n    }\n\n    deleteRep = async (id) => {\n        await deleteRep(id)\n        this.getAllDoctors();\n        this.getAllReps();\n    }\n\n    deleteDoc = async (id) => {\n        await deleteDoc(id)\n        this.getAllDoctors();\n        this.getAllReps();\n    }\n\n    getSelectedEmployee = async (type, id) => {\n        const { doctors, reps } = this.state;\n        let selectedEmployee = null;\n        if (type === \"doctor\") {\n            const result = doctors.filter(d => d.id === id)\n            selectedEmployee = result[0]\n        } else {\n            const result = reps.filter(r => r.id === id)\n            selectedEmployee = result[0]\n        }\n        this.setState({\n            selectedEmployee: selectedEmployee\n        })\n    }\n\n\n\n    render() {\n        const { doctors, reps, isOpenDialogAdd, isOpenDialogEdit, selectedEmployee } = this.state;\n        return <div className=\"employee full\">\n            <BreadCrumbs data={data} />\n            {\n                isOpenDialogAdd && <AddEmployeeDialog\n                    open={isOpenDialogAdd}\n                    handleToggleDialogAdd={this.handleToggleDialogAdd}\n                    addNewEmployee={this.addNewEmployee}\n                />\n            }\n            {\n                isOpenDialogEdit && <EditEmployeeDialog\n                    open={isOpenDialogEdit}\n                    handleToggleDialogEdit={this.handleToggleDialogEdit}\n                    editEmployee={this.editEmployee}\n                    employee={selectedEmployee}\n                />\n            }\n            <div className=\"add-area\">\n                <button className=\"report\" onClick={this.handleToggleDialogAdd}><span>Add</span> <AddIcon /></button>\n            </div>\n            <section id=\"employee-section\" className=\"main-section\">\n                <TableContainer component={Paper}>\n                    <div className=\"search-area\">\n                        <InputBase\n                            className=\"seach-bar\"\n                            placeholder=\"Search Employee\"\n                        />\n                        <IconButton type=\"submit\" className=\"search-button\" aria-label=\"search\">\n                            <SearchIcon />\n                        </IconButton>\n                    </div>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"left\">Employee Name</TableCell>\n                                <TableCell align=\"left\">Job</TableCell>\n                                <TableCell align=\"left\">D.O.B</TableCell>\n                                <TableCell align=\"left\">Phone</TableCell>\n                                <TableCell align=\"left\">Email</TableCell>\n                                <TableCell align=\"left\">Salary</TableCell>\n                                <TableCell align=\"left\">Speciality</TableCell>\n                                <TableCell align=\"left\">Action</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {/*  */}\n                            {doctors && doctors.map(d => {\n                                return <TableRow key={d.id}>\n                                    <TableCell align=\"left\">{d.name}</TableCell>\n                                    <TableCell align=\"left\">Doctor</TableCell>\n                                    <TableCell align=\"left\">{d.dob}</TableCell>\n                                    <TableCell align=\"left\">{d.phone}</TableCell>\n                                    <TableCell align=\"left\">{d.email}</TableCell>\n                                    <TableCell align=\"left\">{d.salary}</TableCell>\n                                    <TableCell align=\"left\">{d.speciality}</TableCell>\n                                    <TableCell align=\"left\">\n                                        <IconButton aria-label=\"edit\" onClick={() => { this.handleToggleDialogEdit(); this.getSelectedEmployee('doctor', d.id) }}>\n                                            <EditIcon fontSize=\"small\" className=\"edit-button\" />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            })}\n\n                            {reps && reps.map(r => {\n                                return <TableRow key={r.id}>\n                                    <TableCell align=\"left\">{r.name}</TableCell>\n                                    <TableCell align=\"left\">Nurse</TableCell>\n                                    <TableCell align=\"left\">{r.dob}</TableCell>\n                                    <TableCell align=\"left\">{r.phone}</TableCell>\n                                    <TableCell align=\"left\">{r.email}</TableCell>\n                                    <TableCell align=\"left\">{r.salary}</TableCell>\n                                    <TableCell align=\"left\"></TableCell>\n                                    <TableCell align=\"left\">\n                                        <IconButton aria-label=\"edit\" onClick={() => { this.handleToggleDialogEdit(); this.getSelectedEmployee('nurse', r.id) }}>\n                                            <EditIcon fontSize=\"small\" className=\"edit-button\" />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            })}\n\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </section>\n        </div >\n    }\n}\n\nexport default Employee;"]},"metadata":{},"sourceType":"module"}
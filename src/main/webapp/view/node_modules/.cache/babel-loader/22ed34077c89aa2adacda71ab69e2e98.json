{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hanu\\\\HANU_Hospital-main\\\\src\\\\main\\\\webapp\\\\view\\\\src\\\\pages\\\\accounts\\\\Accounts.js\";\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport BreadCrumbs from '../../components/breadcrumbs/BreadCrumbs';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { getAllAccounts, deactivateAccount } from '../../utils/api';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  active: [{\n    title: \"Dashboard\",\n    link: \"dashboard\"\n  }],\n  current: \"Accounts\"\n};\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        page: 0,\n        rowsPerPage: parseInt(event.target.value, 10)\n      });\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const {\n        orderBy,\n        orderDirection\n      } = this.state;\n      const isAscending = orderBy === property && orderDirection === 'asc';\n      this.setState({\n        orderBy: property,\n        orderDirection: isAscending ? 'desc' : 'asc'\n      });\n    };\n\n    this.createSortHandler = property => event => {\n      this.handleRequestSort(event, property);\n    };\n\n    this.sortDepartment = (patient, comparator) => {\n      const stabilizedRowArray = patient.map((el, index) => [el, index]);\n      stabilizedRowArray.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n      });\n      return stabilizedRowArray.map(el => el[0]);\n    };\n\n    this.deactivate = async id => {\n      if (window.confirm('Do you want to deactivate this account ?')) {\n        await deactivateAccount(id);\n        this.getAllAccounts();\n      }\n    };\n\n    this.state = {\n      headCells: [{\n        id: 'name',\n        label: 'Name',\n        sortable: true\n      }, {\n        id: 'username',\n        label: 'Username',\n        sortable: true\n      }, {\n        id: 'phoneNumber',\n        label: 'Phone Number'\n      }, {\n        id: 'address',\n        label: 'Address'\n      }, {\n        id: 'role',\n        label: 'Role'\n      }, {\n        id: 'status',\n        label: 'Status'\n      }, {\n        id: 'action',\n        label: 'Actions'\n      }],\n      page: 0,\n      rowsPerPage: 5,\n      orderBy: 'name',\n      orderDirection: 'asc',\n      accounts: null\n    };\n  }\n\n  componentDidMount() {\n    this.getAllAccounts();\n  }\n\n  async getAllAccounts() {\n    const accounts = await getAllAccounts();\n    this.setState({\n      accounts: accounts\n    });\n  }\n\n  descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  getComparator(order, orderBy) {\n    return order === 'desc' ? (a, b) => this.descendingComparator(a, b, orderBy) : (a, b) => -this.descendingComparator(a, b, orderBy);\n  }\n\n  render() {\n    const {\n      isOpenDialogAdd,\n      isOpenDialogEdit,\n      accounts,\n      selectedID,\n      orderBy,\n      orderDirection,\n      headCells,\n      page,\n      rowsPerPage,\n      isRemove\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accounts full\",\n      children: [/*#__PURE__*/_jsxDEV(BreadCrumbs, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-area\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"report\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 49\n            }, this), \" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-area\",\n          children: [/*#__PURE__*/_jsxDEV(InputBase, {\n            className: \"seach-bar\",\n            placeholder: \"Search Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            type: \"submit\",\n            className: \"search-button\",\n            \"aria-label\": \"search\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: headCells.map(headCell => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: headCell.sortable ? /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: orderBy === headCell.id,\n                    direction: orderBy === headCell.id ? orderDirection : 'asc',\n                    onClick: this.createSortHandler(headCell.id),\n                    children: headCell.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 43\n                  }, this) : headCell.label\n                }, headCell.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 40\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: accounts && accounts.length > 0 && this.sortDepartment(accounts, this.getComparator(orderDirection, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(a => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: a.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: a.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: a.phoneNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: a.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: a.role.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: a.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"delete\",\n                  onClick: () => {\n                    this.deactivate(a.id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    fontSize: \"small\",\n                    color: \"secondary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 29\n              }, this)]\n            }, a.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 207\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Accounts);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Hanu/HANU_Hospital-main/src/main/webapp/view/src/pages/accounts/Accounts.js"],"names":["React","Component","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","InputBase","IconButton","SearchIcon","AddIcon","BreadCrumbs","TableSortLabel","getAllAccounts","deactivateAccount","DeleteIcon","Link","withRouter","data","active","title","link","current","Accounts","constructor","props","handleChangePage","event","newPage","setState","page","handleChangeRowsPerPage","rowsPerPage","parseInt","target","value","handleRequestSort","property","orderBy","orderDirection","state","isAscending","createSortHandler","sortDepartment","patient","comparator","stabilizedRowArray","map","el","index","sort","a","b","order","deactivate","id","window","confirm","headCells","label","sortable","accounts","componentDidMount","descendingComparator","getComparator","render","isOpenDialogAdd","isOpenDialogEdit","selectedID","isRemove","headCell","length","slice","name","username","phoneNumber","address","role","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport BreadCrumbs from '../../components/breadcrumbs/BreadCrumbs';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { getAllAccounts, deactivateAccount } from '../../utils/api';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\n\nconst data = {\n    active:\n        [\n            { title: \"Dashboard\", link: \"dashboard\" }\n        ],\n    current: \"Accounts\"\n}\n\nclass Accounts extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            headCells: [\n                { id: 'name', label: 'Name', sortable: true },\n                { id: 'username', label: 'Username', sortable: true },\n                { id: 'phoneNumber', label: 'Phone Number' },\n                { id: 'address', label: 'Address' },\n                { id: 'role', label: 'Role' },\n                { id: 'status', label: 'Status' },\n                { id: 'action', label: 'Actions' },\n            ],\n            page: 0,\n            rowsPerPage: 5,\n            orderBy: 'name',\n            orderDirection: 'asc',\n            accounts: null\n        }\n    }\n\n    componentDidMount() {\n        this.getAllAccounts();\n    }\n\n    async getAllAccounts() {\n        const accounts = await getAllAccounts();\n        this.setState({\n            accounts: accounts\n        })\n    }\n\n    handleChangePage = (event, newPage) => {\n        this.setState({\n            page: newPage\n        });\n    };\n\n    handleChangeRowsPerPage = (event) => {\n        this.setState({\n            page: 0,\n            rowsPerPage: parseInt(event.target.value, 10)\n        })\n    };\n\n    handleRequestSort = (event, property) => {\n        const { orderBy, orderDirection } = this.state;\n        const isAscending = (orderBy === property && orderDirection === 'asc');\n        this.setState({\n            orderBy: property,\n            orderDirection: (isAscending) ? 'desc' : 'asc'\n        })\n    };\n\n    createSortHandler = (property) => (event) => {\n        this.handleRequestSort(event, property)\n    };\n\n    descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => this.descendingComparator(a, b, orderBy)\n            : (a, b) => -this.descendingComparator(a, b, orderBy)\n    }\n\n    sortDepartment = (patient, comparator) => {\n        const stabilizedRowArray = patient.map((el, index) => [el, index])\n        stabilizedRowArray.sort((a, b) => {\n            const order = comparator(a[0], b[0])\n            if (order !== 0) return order\n            return a[1] - b[1]\n        })\n        return stabilizedRowArray.map((el) => el[0])\n    }\n\n    deactivate = async (id) => {\n        if (window.confirm('Do you want to deactivate this account ?')) {\n            await deactivateAccount(id)\n            this.getAllAccounts();\n        }\n    }\n\n    render() {\n        const { isOpenDialogAdd, isOpenDialogEdit, accounts, selectedID,\n            orderBy, orderDirection, headCells, page, rowsPerPage, isRemove } = this.state;\n        return <div className=\"accounts full\">\n            <BreadCrumbs data={data} />\n            <div className=\"add-area\">\n                <Link to=\"/signup\">\n                    <button className=\"report\" ><span>Add</span> <AddIcon /></button>\n                </Link>\n            </div>\n            <TableContainer component={Paper}>\n                <div className=\"search-area\">\n                    <InputBase\n                        className=\"seach-bar\"\n                        placeholder=\"Search Account\"\n                    />\n                    <IconButton type=\"submit\" className=\"search-button\" aria-label=\"search\">\n                        <SearchIcon />\n                    </IconButton>\n                </div>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            {headCells.map((headCell) => {\n                                return <TableCell key={headCell.id}>\n                                    {(headCell.sortable)\n                                        ? <TableSortLabel\n                                            active={orderBy === headCell.id}\n                                            direction={orderBy === headCell.id ? orderDirection : 'asc'}\n                                            onClick={this.createSortHandler(headCell.id)}\n                                        >\n                                            {headCell.label}\n                                        </TableSortLabel>\n                                        : headCell.label\n                                    }\n                                </TableCell>\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {accounts && accounts.length > 0 && this.sortDepartment(accounts, this.getComparator(orderDirection, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((a) => <TableRow key={a.id}>\n                            <TableCell align=\"left\">{a.name}</TableCell>\n                            <TableCell align=\"left\">{a.username}</TableCell>\n                            <TableCell align=\"left\">{a.phoneNumber}</TableCell>\n                            <TableCell align=\"left\">{a.address}</TableCell>\n                            <TableCell align=\"left\">{a.role.name}</TableCell>\n                            <TableCell align=\"left\">{a.status}</TableCell>\n                            <TableCell align=\"left\">\n                                <IconButton aria-label=\"delete\" onClick={() => { this.deactivate(a.id) }}>\n                                    <DeleteIcon fontSize=\"small\" color=\"secondary\" />\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div >\n    }\n}\n\nexport default withRouter(Accounts);"]},"metadata":{},"sourceType":"module"}